from _typeshed import Incomplete
from ranger.core.shared import FileManagerAware as FileManagerAware
from ranger.ext.signals import SignalDispatcher as SignalDispatcher

SIGNAL_PRIORITY_RAW: float
SIGNAL_PRIORITY_SANITIZE: float
SIGNAL_PRIORITY_BETWEEN: float
SIGNAL_PRIORITY_SYNC: float
SIGNAL_PRIORITY_AFTER_SYNC: float
ALLOWED_SETTINGS: Incomplete
ALLOWED_VALUES: Incomplete
DEFAULT_VALUES: Incomplete

class Settings(SignalDispatcher, FileManagerAware):
    def __init__(self) -> None: ...
    def set(self, name, value, path: Incomplete | None = None, tags: Incomplete | None = None) -> None: ...
    def get(self, name, path: Incomplete | None = None): ...
    def __setattr__(self, name, value) -> None: ...
    def __getattr__(self, name): ...
    def __iter__(self): ...
    @staticmethod
    def types_of(name): ...
    __getitem__ = __getattr__
    __setitem__ = __setattr__

class LocalSettings:
    def __init__(self, path, parent) -> None: ...
    def __setattr__(self, name, value) -> None: ...
    def __getattr__(self, name): ...
    def __iter__(self): ...
    __getitem__ = __getattr__
    __setitem__ = __setattr__
