---
- name: Install Dependencies
  become: true
  ansible.builtin.package:
    name:
      - nfs-utils
      - vagrant
      - libvirt
    state: present

- name: Install Arch Dependencies
  become: true
  ansible.builtin.package:
    name:
      - qemu-img
      - qemu-system-x86
    state: present
  when: ansible_os_family == 'Archlinux'

- name: Ensure that the NFS server is enabled and started
  become: true
  ansible.builtin.systemd:
    name: nfs-server
    enabled: true
    state: started

- name: Configure Firewall for NFS
  become: true
  ansible.posix.firewalld:
    service: "{{ item }}"
    zone: libvirt
    permanent: true
    state: enabled
  loop:
    - nfs3
    - nfs
    - rpc-bind
    - mountd

- name: Enable libvirt systemd service
  ansible.builtin.systemd:
    name: libvirtd
    enabled: true
    state: started

- name: Reload firewalld
  become: true
  ansible.builtin.service:
    name: firewalld
    state: reloaded

- name: Ensure that the 'libvirt' group exists
  become: true
  ansible.builtin.group:
    name: libvirt
    state: present

- name: Ensure that the 'vagrant' group exists
  become: true
  ansible.builtin.group:
    name: vagrant
    state: present

- name: Add user to the libvirt group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_env.USER }}"
    groups: vagrant
    append: true

- name: Ensure that vagrant has permissions to be able to use NFS without a password prompt
  become: true
  community.general.sudoers:
    name: vagrant
    group: vagrant
    state: present
    runas: root
    commands:
      - /bin/chown 0\:0 /tmp/vagrant-exports
      - /bin/mv -f /tmp/vagrant-exports /etc/exports
      - /usr/bin/systemctl status --no-pager nfs-server.service
      - /usr/bin/systemctl start nfs-server.service
      - /usr/sbin/exportfs -ar

- name: Add user to 'vagrant' group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_env.USER }}"
    groups: vagrant
    append: true
