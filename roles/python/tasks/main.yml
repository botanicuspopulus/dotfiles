---
# tasks file for roles/pyenv
- name: Include OS-specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"

- name: Install additional packages for pyenv
  become: true
  ansible.builtin.package:
    name: "{{ python_packages }}"
    state: present

- name: Check if pyenv is installed
  ansible.builtin.stat:
    path: "{{ python_pyenv_path }}"
  register: pyenv_stat

- name: Install pyenv
  when: pyenv_stat is defined
  block:
    - name: Download pyenv installer script
      ansible.builtin.get_url:
        url: https://pyenv.run
        dest: "{{ python_pyenv_install_path }}"
        mode: '0755'

    - name: Run the pyenv installer script
      ansible.builtin.command: "{{ python_pyenv_install_path }}"
      args:
        creates: "{{ python_pyenv_path }}"
      register: result
      changed_when: result.rc == 0

    - name: Remove the installer script
      ansible.builtin.file:
        path: "{{ python_pyenv_install_path }}"
        state: absent

- name: Add pyenv to zshrc if not already present
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.XDG_CONFIG_HOME }}/zsh/.zshrc"
    block: |
      export PYENV_ROOT="$HOME/.pyenv"
      [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
      eval "$(pyenv init -)"
