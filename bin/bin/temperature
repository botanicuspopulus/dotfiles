#!/bin/zsh

source "$HOME/bin/lib/waybar/theme.sh"
source "$HOME/bin/lib/waybar/util.sh"

min_temp=${1:=0}
max_temp=${2:=100}

coretemp_isa_entries="$(sensors -j coretemp-isa-0000)"

typeset -A temps
while IFS='=' read -r key value
do
  temps[$key]=${value%.*}
done < <(jq -r '
.["coretemp-isa-0000"]
| to_entries[]
| select(.key | capture("^Core [0-9]+$|^Package"))
| .key as $core
| .value
| to_entries[]
| select(.key | test("_input$"))
| "\($core | gsub("Package.*"; "Package"))=\(.value)"' <<< "$coretemp_isa_entries")

# Loads data from /proc/cpuinfo into an array
typeset -a processor_info=( "${(@f)"$(</proc/cpuinfo)"}" )
# Extracts the processor name from the array
# (M) is used to show the matches
# (s/: /) is used to split the string by ": "
# ## is used to remove the longest match from the beginning
# [1] is used to get the first match for the pattern "model name*:* "
processor_name=${${(s/: /)${(M)processor_info##model name*:* }[1]}[2]}

output_text="<u><b>$processor_name</b></u>\\n"

function format_text() {
  local key=${1:?No key provided}
  local value=${2:?No value provided}
  local key_width=${4:-${#key}}

  local icon=$(get_temperature_icon "$value")
  local color=$(get_temperature_color "$value")
  local format="%-${key_width}s: <span color=\\\"%s\\\">%-${ICON_WIDTH}s%s°C</span>\\\\n"

  printf "${format}" "${key}" "${color}" "${icon}" "${value}"
}

for key in ${(kon)temps}
do
  temp=${temps[$key]}
  output_text+=$(format_text "$key" "$temp")
done

package_temp=${temps[Package]}
icon=$(get_temperature_icon "$package_temp")
color=$(get_temperature_color "$package_temp")
text=$(printf "<span color=\\\"%s\\\">%-${ICON_WIDTH}s%s°C</span>" "${color}" "${icon}" "${package_temp}")

printf '{"text": "%s", "tooltip": "%s"}' "${text}" "${output_text%\\n}"
